
# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: 'pea_tracker'
version: '1.0.0'
config-version: 2

# This setting configures which "profile" dbt uses for this project.
profile: 'pea_tracker'

# These configurations specify where dbt should look for different types of files.
# The `source-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
source-paths: ["models"]
analysis-paths: ["analysis"]
test-paths: ["tests"]
data-paths: ["data"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

target-path: "target"  # directory which will store compiled SQL files
clean-targets:         # directories to be removed by `dbt clean`
    - "target"
    - "dbt_modules"


# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

# In this example config, we tell dbt to build all models in the example/ directory
# as tables. These settings can be overridden in the individual model files
# using the `{{ config(...) }}` macro.

models:
  pea_tracker: #same as line 5
    loaded_at_field: loaded_at
    stg:
      schema: stg
      materialized: view
    marts:
      schema: mart
      materialized: table
    dw:
      schema: dw
      materialized: table
      dw_fact_prices:
        materialized: incremental
        unique_key: pk
        on_schema_change: sync_all_columns
      dw_fact_prices_monthly:
        materialized: incremental
        unique_key: pk
        on_schema_change: sync_all_columns 
      dw_fact_portfolio_daily_performance:
        materialized: incremental
        unique_key: pk
        on_schema_change: sync_all_columns
      dw_fact_portfolio_monthly_performance:
        materialized: incremental
        unique_key: pk
        on_schema_change: sync_all_columns
snapshots:
  pea_tracker:
    target_schema: snapshots
    tickers_snapshot:
      strategy: check
      unique_key: ticker_id
      check_cols: ['description', 'index']